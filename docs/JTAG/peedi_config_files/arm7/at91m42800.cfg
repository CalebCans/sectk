;--------------------------------------------------------------------------
;
;
;   PEEDI sample target configuration file
;
;   Ronetix
;
;   Supported devices   : Atmel AT91M42800
;   Board               :
;
;   Revision            : 1.0
;
;   Date                : Feb 5, 2007
;
; The file is delivered "AS IS" without warranty or condition of any
; kind, either express, implied or statutory. This includes without
; limitation any warranty or condition with respect to merchantability or
; fitness for any particular purpose, or against the infringements of
; intellectual property rights of others.
;
;--------------------------------------------------------------------------

;--------------------------------------------------------------------------
; The following section contains licenses that are required for PEEDI to
; operate.
;
; These licenses must be filled before using this file.
;
;   Example:
;       [LICENSE]
;       KEY         = UPDATE_24MAY2007, 1111-1111-1111-1
;       KEY         = ARM7, 2222-2222-2222-2
;
; The minimum required licenses are provided when PEEDI is purchased and
; are printed on the bottom side of PEEDI.
;

[LICENSE]
KEY=UPDATE_25APR2007, 1111-1111-1111-1
KEY=ARM7_ARM9,        2222-2222-2222-2
KEY=GDB_REMOTE,       3333-3333-3333-3
;--------------------------------------------------------------------------

[DEBUGGER]
PROTOCOL = gdb_remote               ; gdb remote
REMOTE_PORT = 2000                  ; TCP/IP port
GDB_READ_INGNORE_TIME = 3000        ; time in ms

[TARGET]
PLATFORM = ARM

[PLATFORM_ARM]
JTAG_CHAIN = 4                      ; list of IR lenghts of all TAP controller in JTAG chain
JTAG_CLOCK = 5, 25000               ; JTAG Clock in [kHz] - 5kHz jtag clock for init operations and 25MHz for normal work
TRST_TYPE = PUSHPULL                ; type of TRST output: OPENDRAIN or PUSHPULL
WAKEUP_TIME = 350                   ; time between releasing the reset and starting the jtag communication
RESET_TIME = 200                    ; lenght of RESET pulse in ms; 0 means no RESET

CORE0 = ARM7TDMI, 0                 ; TAP 0 is ARM7TDMI  CPU
CORE0_STARTUP_MODE      = RESET     ; startup mode after reset:
                                    ;   if RESET than no code is executed after reset
                                    ;   if STOP,XX then the target executes code for XX period in ms.
                                    ;   if RUN then the target executes code until stopped by the telnet "halt" command

CORE0_BREAKMODE         = soft      ; default breakpoint mode for the debugger:
                                    ;   soft - use software breakpoints
                                    ;   hard - use hardware breakpoints

CORE_BREAK_PATTERN      = 0xDFFFDFFF ; software breakpoint pattern

CORE0_INIT              = INIT_M42800 ; init section
CORE0_FLASH0            = U-BOOT
CORE0_FLASH1            = KERNEL
CORE0_FLASH2            = ROOTFS_NAND
CORE0_ENDIAN            = little
CORE0_WORKSPACE_ADDR    = 0x40001000 ; start address of workspace for flash programmer
CORE0_WORKSPACE_LEN     = 0x10000    ; length of workspace in bytes

CORE0_PATH  = "tftp://192.168.1.1"  ; default path
CORE0_FILE  = "test.bin", BIN, 0x40000000

;-------------------------------------------------
; Init for AT91M42800
;-------------------------------------------------
[INIT_M42800]
mem write   0xFFFF4020  0x0F03EE88  ; PMC_CGMR: pll = 32768Hz*1007=32.997MHz

wait 50                             ; wait until PLL is locked

; switch to PLL
mem write   0xFFFF4020  0x0F03EE98  ; PMC_CGMR: pll = 32768Hz*1007=32.997MHz

; cs0 (flash)
mem write   0xFFE00000  0x0100201D  ; 16bit; Base=0x01000000 (default access parameters)

; cs3 (low-power sram)
mem write   0xFFE0000C  0x300030AD  ; 16bit; 4MB page; 4ws; base=0x30000000

; cs4 (fast sram)
mem write   0xFFE00010  0x400030A5  ; 16bit; 4MB page; 2ws; base=0x40000000 (0x400030A1 = 1ws)

; adressbus
mem write   0xFFE00024  0x00000005  ; std. read; 4MB pages (A20, A21)

; remap
mem write   0xFFE00020  0x00000001  ; remap command


[U-BOOT]
CHIP                = S29GL032MB
ACCESS_METHOD       = AGENT
CHECK_ID            = YES
CHIP_WIDTH          = 16
CHIP_COUNT          = 1
BASE_ADDR           = 0x10000000
FILE="tftp:u-boot.bin", BIN, 0x01000000
AUTO_ERASE          = YES

[KERNEL]
CHIP                = S29GL032MB
ACCESS_METHOD       = AGENT
CHECK_ID            = YES
CHIP_WIDTH          = 16
CHIP_COUNT          = 1
BASE_ADDR           = 0x01000000
FILE="tftp:vmImage", BIN, 0x01050000
AUTO_ERASE          = YES

[ROOTFS_FLASH]
CHIP                = S29GL032MB
ACCESS_METHOD       = AGENT
CHECK_ID            = YES
CHIP_WIDTH          = 16
CHIP_COUNT          = 1
BASE_ADDR           = 0x01000000
FILE                = "jffs2.img", BIN, 0x011A0000
AUTO_ERASE          = YES

[ROOTFS_NAND]
CHIP                = NAND_FLASH
DATA_BASE           = 0x40000000     ; data
CMD_BASE            = 0x40200000     ; commands (CLE)
ADDR_BASE           = 0x40400000     ; addreses (ALE)
FILE = "ftp://user:password@192.168.3.1/rootfs.jffs2", BIN, 0

; address and value for asserting the Nand Flash Chip select
; [addr] = value
CS_ASSERT   = 0xFFFFF834, 0x4000

; address and value for releasing the Nand Flash Chip select
; [addr] = value
CS_RELEASE = 0xFFFFF830, 0x4000

; list with bad blocks to be marked as bad
;=========================================
;BAD_BLOCKS=1146, 1698
; CAUTION!!!
; Enable erasing of bad blocks
; DO NOT Enable this if you don't know what you are doing
; For more information see the AN006 (www.ronetix.at/an006.html)
ERASE_BAD_BLOCKS = NO

OOB_INFO = JFFS2        ; how to deal with the OOB (spare) info
                        ;   RAW   - program 528/2112 bytes from file
                        ;   JFFS2 - program 512/2048 bytes from file and add ECC bytes
                        ;   FF    - program 512/2048 bytes from file, set spare info to 0xFF


[SERIAL]
BAUD=115200
STOP_BITS=1
PARITY=NONE
TCP_PORT = 0            ; enable CLI over RS232
;TCP_PORT = 2023        ; enable serial over TCP/IP

[TELNET]
PROMPT = "M42800> "                 ; telnet prompt
;BACKSPACE=127                      ; comment out for autodetect

[DISPLAY]
BRIGHTNESS      = 20                ; LED indicator brightness
VOLUME          = 25                ; beeper volume


[ACTIONS]                           ; user defined scripts
;AUTORUN        = 2                 ; executed on every target connect
1 = erase
2 = prog
3 = dump_ram
4 = dump_flash

[erase]                             ; erase flash
flash erase

[prog]                              ; program flash
flash prog

[dump_ram]                          ; dump part of RAM
memory dump 0x20000000 0x01000 tftp:ram.bin
