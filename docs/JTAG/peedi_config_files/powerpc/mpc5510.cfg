;-------------------------------------------------------------------------------
;
;                                   mpc5510.cfg
;                                   -----------
;
;           PEEDI target configuration file for Freescale MPC5510 CPU
;
;
;   Ronetix
;
;   Supported devices   : MPC5510
;
;   Revision            : 1.0
;
;   Date                : November 04, 2008
;
; The file is delivered "AS IS" without warranty or condition of any
; kind, either express, implied or statutory. This includes without
; limitation any warranty or condition with respect to merchantability or
; fitness for any particular purpose, or against the infringements of
; intellectual property rights of others.
;
;-------------------------------------------------------------------------------

;-------------------------------------------------------------------------------
; The following section contains licenses that are required for PEEDI to oprate.
;
; These licenses must be filled before using this file.
;
;   Example:
;       [LICENSE]
;       KEY         = UPDATE_24MAY2007, 1111-1111-1111-1
;       KEY         = ARM7,             2222-2222-2222-2
;
; The minimum reqired licenses are provided when PEEDI is purchased and are printed
; on the bottom side of PEEDI.
;

[LICENSE]
KEY=UPDATE_24APR2007,   1111-1111-1111-1
KEY=GDB_REMOTE,         2222-2222-2222-2
KEY=MPC5500,            3333-3333-3333-3

; The license keys for one or more PEEDIs can be loaded from an external file
; FILE = tftp://192.168.3.1/licenses.txt
;-------------------------------------------------------------------------------

[DEBUGGER]
PROTOCOL                = gdb_remote    ; gdb remote
REMOTE_PORT             = 2000          ; TCP/IP port
GDB_READ_INGNORE_TIME   = 3000

[TARGET]
PLATFORM                = MPC5500       ; platform is MPC5500

[PLATFORM_MPC5500]
JTAG_CHAIN              = 10, 10        ; list of IR lenght of all TAP controller in JTAG chain
JTAG_CLOCK              = 10000         ; JTAG Clock in [kHz] - 10kHz jtag clock for init operations and 10MHz for normal work
TRST_TYPE               = PUSHPULL      ; type of TRST (JCOMP) output: OPENDRAIN or PUSHPULL
RESET_TIME              = 100           ; lenght of RESET pulse in ms; 0 means no RESET

CORE0                   = MPC5510, 0    ; TAP is MPC5510
CORE0_STARTUP_MODE      = RESET
CORE0_BREAKMODE         = soft          ; breakpoint mode:
                                        ; soft - software breakpiont
                                        ; hard - use hardware breakpoints instead of software
CORE0_INIT              = INIT_MPC5510  ; init section for MPC5510
CORE0_FLASH0            = FLASH_MPC5510 ; flash section parameters
CORE0_ENDIAN            = BIG           ; core is big endian
CORE0_WORKSPACE_ADDR    = 0x40000000    ; start address of workspace for flash programmer
CORE0_WORKSPACE_LEN     = 0x4000        ; length of workspace in bytes
CORE0_USE_NEXUS3_ACCESS = NO            ; use faster mem access for a given region
;CORE0_SMALL_REGS_FRAME  = YES          ; gdb/insight v6.8 and later use smaller remote protocol registers frame

; Default path to be used if only a file name (without the full path) is
; provided to a PEEDI command or for the FILE parameter in the Flash sections
; Examples:
;   In a console:
;      "flash prog tftp://192.168.3.1/image.elf"
;            is equal to
;      "flash prog image.elf"
;
;   In a Flash Profile:
;      FILE="tftp://192.168.3.1/image.bin", BIN, 0
;            is equal to
;      FILE="image.bin", BIN, 0
;
CORE0_PATH  = "tftp://192.168.3.1"
;CORE0_PATH  = "card://"
CORE0_FILE              = "myfile.bin", 0x40000000


[INIT_MPC5510]
; Init MMU so virtual addresses eqial to phisical
; this way we can use Nexus3 module for memory operations

; The MAS2 VLE bit must be set considering the code that will
; reside on the given page. Here we set the SRAM to be non-VLE
; because the PEEDI FLASH agent is classic PowerPC code.
; Periph B is set to VLE because is includes the BOM which is VLE compiled

; Setup MMU for for Periph B Modules
; Base address = 0xFFF0_0000
; TLB0, 1 MByte Memory Space, Guarded, Don't Cache, All Access, VLE
set MAS0 0x10000000
set MAS1 0xC0000500
set MAS2 0xFFF0002A
set MAS3 0xFFF0003F
exec 0x7C0007A4 ; tlbwe

mem write16 0xFFF40016 0 ; disable watchdog as soon as possible

; Set up MMU to put internal Flash at 0...
; Virtual address 0x0 -> Physical address = 0x0000_0000
; TLB1, 256 MByte Memory Space, Not Guarded, Cachable, All Access, PPC
set MAS0 0x10010000
set MAS1 0xC0000900
set MAS2 0x00000000
set MAS3 0x0000003F
exec 0x7C0007A4 ; tlbwe

; Set up MMU for External Memory
; Base address = 0x2000_0000
; TLB2, 256 MByte Memory Space, Not Guarded, Cachable, All Access, PPC
set MAS0 0x10020000
set MAS1 0xC0000900
set MAS2 0x20000000
set MAS3 0x2000003F
exec 0x7C0007A4 ; tlbwe

; Set up MMU for Internal SRAM
; Base address = 0x4000_0000
; TLB3, 256 KByte Memory Space, Not Guarded, Don't Cache, All Access, PPC
set MAS0 0x10030000
set MAS1 0xC0000400
set MAS2 0x40000008
set MAS3 0x4000003F
exec 0x7C0007A4 ; tlbwe

set IVPR 0xFFFFF000                     ; IVPR points to valid memory space

echo Please wait, initializing SRAM...
mem write 0x40000000 0 0x4000			; 64KB in MPC5516 devices
;mem write 0x40000000 0 0x5000			; 80KB in MPC5517 devices

[FLASH_MPC5510]
CHIP                = MPC5517           ; internal FLASH
BASE_ADDR           = 0                 ; chip is mapped at 0
ALLOW_SHADOW_MODIFY = NO
FILE                = "myfile.bin", BIN, 0
AUTO_ERASE          = NO                ; erase before program

[SERIAL]                                ; serial port configuration
BAUD                = 115200
STOP_BITS           = 1
PARITY              = NONE
TCP_PORT            = 0                 ; enable CLI over RS232
;TCP_PORT           = 2023              ; enable serial over TCP/IP

[TELNET]
PROMPT              = "mpc5510> "           ; telnet prompt
;BACKSPACE          = 127               ; comment out for autodetect

[DISPLAY]
BRIGHTNESS          = 20                ; LED indicator brightness
VOLUME              = 25                ; zummer volume

[ACTIONS]                               ; user defined scripts
1 = erase
2 = prog
3 = dump_ram
4 = dump_flash

[erase]                                 ; erase flash
flash erase

[prog]                                  ; program flash
flash prog

[dump_ram]                              ; dump part ot RAM
memory dump 0x40000000 0x01000 tftp:ram.bin

[dump_flash]                            ; dump part of FLASH
memory dump 0x00000000 0x10000 tftp:flash.bin
