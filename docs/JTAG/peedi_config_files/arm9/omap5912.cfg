;--------------------------------------------------------------------------
;
;
;   PEEDI sample target configuration file
;
;   Ronetix
;
;   Supported devices   : OMAP5912
;
;   Revision            : 1.1
;
;   Date                : March 4, 2008
;
; The file is delivered "AS IS" without warranty or condition of any
; kind, either express, implied or statutory. This includes without
; limitation any warranty or condition with respect to merchantability or
; fitness for any particular purpose, or against the infringements of
; intellectual property rights of others.
;
;--------------------------------------------------------------------------

;--------------------------------------------------------------------------
; The following section contains licenses that are required for PEEDI to
; operate.
;
; These licenses must be filled before using this file.
;
;   Example:
;       [LICENSE]
;       KEY         = UPDATE_24MAY2007, 1111-1111-1111-1
;       KEY         = ARM7, 2222-2222-2222-2
;
; The minimum required licenses are provided when PEEDI is purchased and
; are printed on the bottom side of PEEDI.
;

[LICENSE]
KEY=UPDATE_25APR2007, 1111-1111-1111-1
KEY=ARM7_ARM9,        2222-2222-2222-2
KEY=GDB_REMOTE,       3333-3333-3333-3
;--------------------------------------------------------------------------

[DEBUGGER]
PROTOCOL = gdb_remote               ; gdb remote
REMOTE_PORT = 2000                  ; TCP/IP port
GDB_READ_INGNORE_TIME = 3000        ; time in ms

[TARGET]
PLATFORM = ARM

[PLATFORM_ARM]
JTAG_CHAIN = 8, 4, 38               ; list of IR lenghts of all TAP controller in JTAG chain
JTAG_CLOCK = 100, 4000              ; JTAG Clock in [kHz] - 5kHz jtag clock for init operations and 10MHz for normal work
                                    ; Valid range: 5 - 33000
TRST_TYPE = PUSHPULL                ; type of TRST output: OPENDRAIN or PUSHPULL
WAKEUP_TIME = 100                   ; time between releasing the reset and starting the jtag communication
RESET_TIME = 100                    ; lenght of RESET pulse in ms; 0 means no RESET

CORE0 = ARM926E, 1                  ; TAP 0 is ARM926E  CPU
CORE0_STARTUP_MODE      = RESET     ; startup mode after reset:
                                    ;   if RESET than no code is executed after reset
                                    ;   if STOP,XX then the target executes code for XX period in ms.
                                    ;   if RUN then the target executes code until stopped by the telnet "halt" command

CORE0_BREAKMODE         = soft      ; default breakpoint mode for the debugger:
                                    ;   soft - use software breakpoints
                                    ;   hard - use hardware breakpoints

CORE_BREAK_PATTERN      = 0xDFFFDFFF ; software breakpoint pattern

CORE0_INIT              = INIT_OMAP ; init section
CORE0_FLASH0            = U-BOOT
CORE0_ENDIAN            = little
CORE0_WORKSPACE_ADDR    = 0xA0001000 ; start address of workspace for flash programmer
CORE0_WORKSPACE_LEN     = 0x10000    ; length of workspace in bytes

;CORE0_PATH  = "tftp://192.168.1.1"  ; default path
CORE0_PATH  = "card://"  ; default path

CORE0_FILE  = "test.bin", BIN, 0xA0000000

[INIT_OMAP]
mem write16    0xFFFEC808  0x00F5      ; Disable Watchdog Timer
mem write16    0xFFFEC808  0x00A0      ;


[U-BOOT]
CHIP                = S29WS256N
ACCESS_METHOD       = AGENT
CHECK_ID            = YES
CHIP_WIDTH          = 16
CHIP_COUNT          = 1
BASE_ADDR           = 0x00000000
FILE="card:u-boot.bin", BIN, 0xC0000000
AUTO_ERASE=YES

[SERIAL]
BAUD=115200
STOP_BITS=1
PARITY=NONE
TCP_PORT = 0 ; 2023

[TELNET]
PROMPT = "omap> "                   ; telnet prompt
;BACKSPACE=127                      ; comment out for autodetect

[DISPLAY]
BRIGHTNESS      = 20                ; LED indicator brightness
VOLUME          = 25                ; beeper volume


[ACTIONS]                           ; user defined scripts
;AUTORUN        = 2                 ; executed on every target connect
1 = erase
2 = prog
3 = dump_ram

[erase]                             ; erase flash
flash erase

[prog]                              ; program flash
flash prog

[dump_ram]                          ; dump part of RAM
memory dump 0x20000000 0x0100 card:ram.bin
