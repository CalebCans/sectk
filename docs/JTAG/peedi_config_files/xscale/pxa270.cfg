;--------------------------------------------------------------------------
;
;
;   PEEDI target configuration file for PXA270 processor
;
;   Ronetix
;
;   Supported devices   : PXA270
;   Board               : Toradex Colibri
;
;   Revision            : 1.4
;
;   Date                : August 25, 2006
;
; The file is delivered "AS IS" without warranty or condition of any
; kind, either express, implied or statutory. This includes without
; limitation any warranty or condition with respect to merchantability or
; fitness for any particular purpose, or against the infringements of
; intellectual property rights of others.
;
;--------------------------------------------------------------------------

;--------------------------------------------------------------------------
; The following section contains licenses that are required for PEEDI
; to operate.
;
; These licenses must be filled before using this file.
;
;   Example:
;       [LICENSE]
;       KEY         = UPDATE_24MAY2007, 1111-1111-1111-1
;       KEY         = ARM7,             2222-2222-2222-2
;
; The minimum required licenses are provided when PEEDI is purchased
; and are printed on the bottom side of PEEDI.
;

[LICENSE]
KEY = UPDATE_13SEP2006, 1111-1111-1111-1
KEY = XSCALE,           2222-2222-2222-2
KEY = GDB_REMOTE,       3333-3333-3333-3

; the license keys for one or more PEEDIs can be loaded from an external file
; FILE = tftp://192.168.3.1/licenses.txt
;--------------------------------------------------------------------------

[DEBUGGER]
PROTOCOL    = gdb_remote   ; gdb remote
REMOTE_PORT = 2000         ; TCP/IP port
GDB_READ_INGNORE_TIME = 3000

[TARGET]
PLATFORM    = XScale       ; platform is XScale

[PLATFORM_XSCALE]
JTAG_CHAIN  = 7            ; list of IR length of all TAP controller in JTAG chain
JTAG_CLOCK  = 1000, 16000  ; JTAG Clock in [kHz] - 1MHz JTAG clock for init
                           ; operations and 16MHz for normal work
TRST_TYPE   = PUSHPULL     ; type of TRST output: OPENDRAIN or PUSHPULL
RESET_TIME  = 20           ; length of RESET pulse in ms; 0 means no RESET
WAKEUP_TIME = 500

CORE0                   = XScale, 0         ; TAP is XSCALE CPU
CORE0_STARTUP_MODE      = RESET             ; Stop core
CORE0_BREAKMODE         = soft              ; breakpoint mode:
CORE0_INIT              = INIT_COLIBRI_RAM  ; init section for Colibri board
CORE0_FLASH0            = FLASH_28F128J3C   ; flash section parameters
CORE0_ENDIAN            = LITTLE            ; core is little endian
CORE0_WORKSPACE_ADDR    = 0xA0001000        ; start address of workspace for
                                            ; flash programmer
CORE0_WORKSPACE_LEN     = 0x10000           ; length of workspace in bytes

CORE0_DEBUG_HANDLER_ADDR= 0xFE000000        ; debug handler base address
CORE0_VECTOR_CATCH_MASK = 0x0               ; 0x10 catch data abort exceptions
CORE0_VECTOR_UNDEF      = AUTO
CORE0_VECTOR_SWI        = AUTO
CORE0_VECTOR_PABORT     = AUTO
CORE0_VECTOR_DABORT     = AUTO
CORE0_VECTOR_RES        = AUTO
CORE0_VECTOR_IRQ        = AUTO
CORE0_VECTOR_FIQ        = AUTO
CORE0_RELOCATED_UNDEF   = AUTO
CORE0_RELOCATED_SWI     = AUTO
CORE0_RELOCATED_PABORT  = AUTO
CORE0_RELOCATED_DABORT  = AUTO
CORE0_RELOCATED_RES     = AUTO
CORE0_RELOCATED_IRQ     = AUTO
CORE0_RELOCATED_FIQ     = AUTO

; Default path to be used if only a file name (without the full path) is
; provided to a PEEDI command or for the FILE parameter in the Flash sections
; Examples:
;   In a console:
;      "flash prog tftp://192.168.3.1/image.elf"
;            is equal to
;      "flash prog image.elf"
;
;   In a Flash Profile:
;      FILE="tftp://192.168.3.1/image.bin", BIN, 0
;            is equal to
;      FILE="image.bin", BIN, 0
;
CORE0_PATH  = "tftp://192.168.3.1"
;CORE0_PATH  = "card://"

[INIT_COLIBRI_LINUX]
break add watch 0xffff001C w 32             ; break after vectors are set
go                                          ; start target
wait 30000 stop                             ; wait to break
go                                          ; start again with updated vectors

[INIT_COLIBRI_RAM]
memory write 0x48000008 0x000095F2          ; MSC0 = 0x000095F2
memory read  0x48000008                     ; read MSC0
memory write 0x4800000C 0x0000F974          ; MSC1 = 0x0000F974
memory read  0x4800000C                     ; read MSC1
memory write 0x48000010 0x00000000          ; MSC2 = 0x00000000
memory read  0x48000010                     ; read MSC2
memory write 0x48000014 0x00000001          ; MECR = 0x00000001
memory read  0x48000014                     ; read MECR
memory write 0x48000004 0x20CA601E          ; MDREFR = 0x0000001E
memory read  0x48000004                     ; read MDREFR
memory write 0x4800001C 0x40044004          ; SXCNFG = 0x40044004
memory write 0x48000004 0x2043601E          ; MDREFR = 0x0000001E
memory read  0x48000004                     ; read MDREFR
memory write 0x48000004 0x2003601E          ; MDREFR = 0x0000001E
memory read  0x48000004                     ; read MDREFR
memory write 0x48000004 0x2003E01E          ; MDREFR = 0x0000001E
memory read  0x48000004                     ; read MDREFR
memory write 0x48000000 0x08000AC8          ; MDCNFG = 0x08000AC8
memory read  0x48000000                     ; read MDCNFG
wait  300
memory write 0x48000000 0x08000AC9          ; MDCNFG = 0x08000ACD
memory read  0x48000000                     ; read MDCNFG
memory write 0x48000040 0x00000000          ; MDMRS = 0x00000000
memory read  0x48000040                     ; read MDCNFG
memory write 0x48000004 0x2013E01E          ; MDREFR = 0x0000001E
memory read  0x48000004                     ; read MDREFR
memory write 0x4800004C 0xFFFFFFFF          ; BSCNTR0 = 0xFFFFFFFF
memory write 0x48000050 0xFFFFFF5F          ; BSCNTR1 = 0xFFFFFF5F
memory write 0x4800005C 0xFFFFFFFF          ; BSCNTR2 = 0xFFFFFFFF
memory write 0x48000060 0xFFFFFFFF          ; BSCNTR3 = 0xFFFFFFFF


[FLASH_28F128J3C]
; auto detect 28F128J3(A) or 28F128P30B
CHIP                    = 28F128J3(A)       ; flash chip
CHIP                    = 28F128P30B        ; flash chip
ACCESS_METHOD           = DIRECT            ; program method auto
CHECK_ID                = YES               ; check chip ID
CHIP_WIDTH              = 16                ; chip is in 16 bit configuration
CHIP_COUNT              = 2                 ; two chip are used
BASE_ADDR               = 0                 ; chip is mapped at 0x0000000
FILE                    = "u-boot.bin", BIN, 0 ; file to program
AUTO_ERASE              = YES               ; erase before program
AUTO_LOCK               = NO                ; lock after program

[SERIAL]                                    ; serial port configuration
BAUD                    = 115200
STOP_BITS               = 1
PARITY                  = NONE
TCP_PORT                = 0                 ; enable CLI over RS232
;TCP_PORT               = 2023              ; enable serial over TCP/IP

[TELNET]
PROMPT                  = "PXA270>"         ; telnet prompt
;BACKSPACE              = 127               ; comment out for autodetect

[DISPLAY]
BRIGHTNESS              = 20                ; LED indicator brightness
VOLUME                  = 25                ; beeper volume

[ACTIONS]                                   ; user defined scripts
;AUTORUN        = 2                         ; executed on every target connect
1 = erase
2 = prog

[erase]                                     ; erase flash
flash erase

[prog]                                      ; program flash
flash program
