;--------------------------------------------------------------------------
;
;
;   PEEDI target configuration file for PXA255 processor
;
;   Ronetix
;
;   Supported devices   : PXA255
;
;   Revision            : 1.4
;
;   Date                : August 25, 2006
;
; The file is delivered "AS IS" without warranty or condition of any
; kind, either express, implied or statutory. This includes without
; limitation any warranty or condition with respect to merchantability or
; fitness for any particular purpose, or against the infringements of
; intellectual property rights of others.
;
;--------------------------------------------------------------------------

;--------------------------------------------------------------------------
; The following section contains licenses that are required for PEEDI
; to operate.
;
; These licenses must be filled before using this file.
;
;   Example:
;       [LICENSE]
;       KEY         = UPDATE_24MAY2007, 1111-1111-1111-1
;       KEY         = XSCALE,           2222-2222-2222-2
;
; The minimum required licenses are provided when PEEDI is purchased
; and are printed on the bottom side of PEEDI.
;

[LICENSE]
KEY = UPDATE_13SEP2006, 1111-1111-1111-1
KEY = XSCALE,           2222-2222-2222-2
KEY = GDB_REMOTE,       3333-3333-3333-3
;--------------------------------------------------------------------------

[DEBUGGER]
PROTOCOL    = gdb_remote    ; gdb remote
REMOTE_PORT = 2000          ; TCP/IP port
GDB_READ_INGNORE_TIME = 3000

[TARGET]
PLATFORM    = XScale        ; platform is XScale

[PLATFORM_XSCALE]
JTAG_CHAIN  = 5             ; list of IR length of all TAP controller in JTAG chain
JTAG_CLOCK  = 1000, 20000   ; JTAG Clock in [kHz] – 1MHz JTAG clock for init
                            ; operations and 20MHz for normal work
TRST_TYPE   = OPENDRAIN     ; type of TRST output: OPENDRAIN or PUSHPULL
RESET_TIME  = 20            ; length of RESET pulse in ms; 0 means no RESET

CORE0                   = XScale            ; TAP is XSCALE CPU
CORE0_STARTUP_MODE      = RESET             ; Stop core
CORE0_BREAKMODE         = soft              ; breakpoint mode:
CORE0_INIT              = INIT_TRITON_RAM   ; init section for Triton LP board
CORE0_FLASH0            = FLASH_28F128J3A   ; flash section parameters
CORE0_ENDIAN            = LITTLE            ; core is little endian
CORE0_WORKSPACE_ADDR    = 0xA0000000        ; start address of workspace for
                                            ; flash programmer
CORE0_WORKSPACE_LEN     = 0x10000           ; length of workspace in bytes
CORE0_DEBUG_HANDLER_ADDR= 0xFFFFF800        ; debug handler base address
CORE0_VECTOR_CATCH_MASK = 0x00              ; catch data abort exceptions
CORE0_VECTOR_UNDEF      = AUTO
CORE0_VECTOR_SWI        = AUTO
CORE0_VECTOR_PABORT     = AUTO
CORE0_VECTOR_DABORT     = AUTO
CORE0_VECTOR_RES        = AUTO
CORE0_VECTOR_IRQ        = AUTO
CORE0_VECTOR_FIQ        = AUTO
CORE0_RELOCATED_UNDEF   = AUTO
CORE0_RELOCATED_SWI     = AUTO
CORE0_RELOCATED_PABORT  = AUTO
CORE0_RELOCATED_DABORT  = AUTO
CORE0_RELOCATED_RES     = AUTO
CORE0_RELOCATED_IRQ     = AUTO
CORE0_RELOCATED_FIQ     = AUTO

CORE0_FILE              = "myfile.bin", BIN, 0xA0000000 ; default file
CORE0_PATH              = "tftp://192.168.1.1" ; default path

[INIT_TRITON_LINUX]
break add watch 0xffff001C w 32             ; break after vectors are set
go                                          ; start target

[INIT_TRITON_RAM]
memory write 0x48000008 0x12DC24D8          ; MSC0 = 0x26F226F2
memory read 0x48000008                      ; read MSC0
memory write 0x4800000C 0x7FF07FF0          ; MSC1 = 0x3FF4A441
wait  10
memory write 0x48000010 0x7FF07FF0          ; MSC2 = 0x00007FF0
wait  10
memory write 0x48000004 0x00000018          ; MDREFR = 0x00000018
memory write 0x4800001C 0x00000000          ; SXCNFG = 0x00000000
memory write 0x48000004 0x00010018          ; MDREFR = 0x00010018
wait  10
memory write 0x48000004 0x0009C030          ; MDREFR = 0x000BC018
memory write 0x48000000 0x00000AA8          ; MDCNFG = 0x00000AA8
wait  100
memory write 0x48000000 0x00000AAD          ; MDCNFG = 0x00000AA9
memory write 0x48000040 0x00220032          ; MDMRS = 0x00220032

[FLASH_28F128J3A]
; auto detect 28F128J3(A) or 28F128P30B
CHIP                    = 28F128J3(A)       ; flash chip
CHIP                    = 28F128P30B        ; flash chip
ACCESS_METHOD           = AUTO              ; program method auto
CHECK_ID                = YES               ; check chip ID
CHIP_WIDTH              = 16                ; chip is in 16 bit configuration
CHIP_COUNT              = 1                 ; one chip is used
BASE_ADDR               = 0                 ; chip is mapped at 0x0000000
FILE                    = "myfile.bin", BIN, 0 ; file to program
AUTO_ERASE              = NO                ; erase before program
AUTO_LOCK               = NO                ; lock after program

[SERIAL]                                    ; serial port configuration
BAUD                    = 115200
STOP_BITS               = 1
PARITY                  = NONE
TCP_PORT                = 0                 ; enable CLI over RS232
;TCP_PORT               = 2023              ; enable serial over TCP/IP

[TELNET]
PROMPT                  = "pxa255> "        ; telnet prompt
;BACKSPACE              = 127               ; comment out for autodetect

[DISPLAY]
BRIGHTNESS              = 20                ; LED indicator brightness
VOLUME                  = 25                ; beeper volume

[ACTIONS]                                   ; user defined scripts
1 = erase
2 = prog

[erase]                                     ; erase flash
flash erase

[prog]                                      ; program flash
flash program
